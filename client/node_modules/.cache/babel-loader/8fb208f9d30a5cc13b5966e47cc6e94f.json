{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Rushlow\\\\documents\\\\rushlow-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.jsx\";\nimport CustomButton from \"../custom-button/custom-button.jsx\";\nimport { SignUpStart } from \"../../redux/user/user.actions.js\";\nimport \"./sign-up.scss\";\n\nconst SignUp = () => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const {\n    displayName,\n    Email,\n    Password,\n    ConfirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (Password !== ConfirmPassword) {\n      alert(\"Your passwords do not match. Please try again.\");\n      return;\n    } else {\n      const {\n        SignUpStart\n      } = this.props;\n      SignUpStart(displayName, Email, Password);\n      this.setState({});\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      id,\n      value\n    } = event.target;\n    console.log(userCredentials);\n    setCredentials({\n      [id]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"displayName\",\n    type: \"text\",\n    name: \"Display Name\",\n    value: displayName,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Email\",\n    type: \"email\",\n    name: \"Email\",\n    value: Email,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Password\",\n    type: \"password\",\n    name: \"Password\",\n    value: Password,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ConfirmPassword\",\n    type: \"password\",\n    name: \"Confirm Password\",\n    value: ConfirmPassword,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  SignUpStart: (displayName, Email, Password) => dispatch(SignUpStart({\n    displayName,\n    Email,\n    Password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/components/sign-up/sign-up.jsx"],"names":["React","Fragment","useState","connect","FormInput","CustomButton","SignUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","Email","Password","ConfirmPassword","handleSubmit","event","preventDefault","alert","props","setState","handleChange","id","value","target","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from \"../form-input/form-input.jsx\"\r\nimport CustomButton from \"../custom-button/custom-button.jsx\"\r\n\r\nimport { SignUpStart } from \"../../redux/user/user.actions.js\"\r\n\r\nimport \"./sign-up.scss\"\r\n\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n    const [userCredentials, setCredentials] = useState({\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n    })\r\n\r\n    const { displayName, Email, Password, ConfirmPassword } = userCredentials\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            alert(\"Your passwords do not match. Please try again.\")\r\n            return\r\n        }\r\n        else {\r\n            const { SignUpStart } = this.props;\r\n\r\n            SignUpStart(displayName, Email, Password)\r\n            this.setState({})\r\n        }\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        const { id, value } = event.target;\r\n\r\n        console.log(userCredentials)\r\n\r\n        setCredentials({ [id]: value })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"sign-up\">\r\n                <h2 className=\"title\" >I do not have an account</h2>\r\n\r\n                <form className=\"sign-up-form\" onSubmit={handleSubmit} >\r\n                    <FormInput\r\n                        id=\"displayName\"\r\n                        type=\"text\"\r\n                        name=\"Display Name\"\r\n                        value={displayName}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        id=\"Email\"\r\n                        type=\"email\"\r\n                        name=\"Email\"\r\n                        value={Email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        id=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"Password\"\r\n                        value={Password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        id=\"ConfirmPassword\"\r\n                        type=\"password\"\r\n                        name=\"Confirm Password\"\r\n                        value={ConfirmPassword}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    SignUpStart: (displayName, Email, Password) => dispatch(SignUpStart(\r\n        {\r\n            displayName, Email, Password\r\n        }\r\n    ))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}