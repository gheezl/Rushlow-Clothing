{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Rushlow\\\\documents\\\\rushlow-clothing\\\\src\\\\pages\\\\shop\\\\shop.jsx\";\nimport React, { Fragment, Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport selectIsCollectionFetching from \"../../redux/shop/selectors/selectIsCollectionFetching.selector.js\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.js\";\nimport CollectionPage from \"../collection/collection.jsx\";\nimport WithSpinner from \"../../components/spinner/with-spinner.jsx\";\nimport fetchCollectionsStartAsync from \"../../redux/shop/shop.actions.js\";\nimport updateCollections from \"../../redux/shop/shop.actions.js\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nclass Shop extends Component {\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot.docs);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 76\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:categoryId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 88\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/pages/shop/shop.jsx"],"names":["React","Fragment","Component","connect","Route","createStructuredSelector","selectIsCollectionFetching","CollectionsOverview","CollectionPage","WithSpinner","fetchCollectionsStartAsync","updateCollections","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","Shop","componentDidMount","props","collectionRef","firestore","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","collectionsMap","convertCollectionsSnapshotToMap","docs","setState","loading","render","match","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,0BAAP,MAAuC,mEAAvC;AAEA,OAAOC,mBAAP,MAAgC,+DAAhC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,WAAP,MAAwB,2CAAxB;AAEA,OAAOC,0BAAP,MAAuC,kCAAvC;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AAMA,MAAMC,8BAA8B,GAAGH,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMM,0BAA0B,GAAGJ,WAAW,CAACD,cAAD,CAA9C;;AAEA,MAAMM,IAAN,SAAmBZ,SAAnB,CAA6B;AAEzBa,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEJ,MAAAA;AAAF,QAAwB,KAAKK,KAAnC;AACA,UAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKC,uBAAL,GAA+BH,aAAa,CAACI,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACtE,YAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAQ,CAACG,IAAV,CAAtD;AACAd,MAAAA,iBAAiB,CAACY,cAAD,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJ8B,CAA/B;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKb,KAAvB;AACA,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGd,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEW;AAA3C,SAAwDX,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,cAAjC;AAAgD,MAAA,MAAM,EAAGd,KAAD,iBAAW,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEW;AAAvC,SAAoDX,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ;AAQH;;AAvBwB;;AA0B7B,MAAMe,eAAe,GAAG1B,wBAAwB,CAAC;AAC7C2B,EAAAA,oBAAoB,EAAE1B;AADuB,CAAD,CAAhD;;AAIA,MAAM2B,kBAAkB,GAAIC,QAAD,KAAe;AACtCxB,EAAAA,0BAA0B,EAAE,MAAMwB,QAAQ,CAACxB,0BAA0B,EAA3B;AADJ,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAAC4B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,IAA7C,CAAf","sourcesContent":["import React, { Fragment, Component } from 'react';\r\nimport { connect } from \"react-redux\"\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { createStructuredSelector } from \"reselect\"\r\nimport selectIsCollectionFetching from \"../../redux/shop/selectors/selectIsCollectionFetching.selector.js\"\r\n\r\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.js\"\r\nimport CollectionPage from \"../collection/collection.jsx\"\r\nimport WithSpinner from \"../../components/spinner/with-spinner.jsx\"\r\n\r\nimport fetchCollectionsStartAsync from \"../../redux/shop/shop.actions.js\"\r\n\r\nimport updateCollections from \"../../redux/shop/shop.actions.js\"\r\n\r\n\r\n\r\n\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass Shop extends Component {\r\n\r\n    componentDidMount() {\r\n        const { updateCollections } = this.props\r\n        const collectionRef = firestore.collection(\"collections\")\r\n\r\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot.docs)\r\n            updateCollections(collectionsMap)\r\n            this.setState({ loading: false })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props\r\n        return (\r\n            <Fragment>\r\n                <div className=\"shop-page\" >\r\n                    <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} />} />\r\n                    <Route exact path={`${match.path}/:categoryId`} render={(props) => <CollectionsPageWithSpinner isLoading={loading} {...props} />} />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);"]},"metadata":{},"sourceType":"module"}