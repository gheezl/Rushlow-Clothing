{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types.js\";\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.js\";\nimport { SignInSuccess, SignInFailure, SignOutSuccess, SignOutFailure } from \"../user/user.actions.js\"; // Saga functions\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(SignInFailure());\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure());\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* signOutOfAccount() {\n  try {\n    yield auth.signOut();\n    yield put(SignOutSuccess());\n  } catch (error) {\n    put(SignOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    DisplayName,\n    Email,\n    Password,\n    ConfirmPassword\n  }\n}) {\n  try {\n    const {\n      user\n    } = auth.createUserWithEmailAndPassword(Email, Password);\n    yield createUserProfileDocument(user, {\n      DisplayName\n    });\n  } catch (error) {\n    console.log(error);\n  }\n} // listensers\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutOfAccount);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n} // Final saga\n\nfunction* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}\n\nexport default userSagas;","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/redux/user/user-saga.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","createUserProfileDocument","googleProvider","getCurrentUser","SignInSuccess","SignInFailure","SignOutSuccess","SignOutFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","console","log","signOutOfAccount","signOut","signUp","DisplayName","Email","Password","ConfirmPassword","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\"\r\n\r\nimport UserActionTypes from \"./user.types.js\"\r\n\r\nimport { auth, createUserProfileDocument, googleProvider, getCurrentUser } from \"../../firebase/firebase.js\"\r\n\r\nimport { SignInSuccess, SignInFailure, SignOutSuccess, SignOutFailure } from \"../user/user.actions.js\"\r\n\r\n// Saga functions\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(\r\n            SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n        )\r\n    }\r\n    catch (error) {\r\n        put(SignInFailure())\r\n    }\r\n}\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        put(SignInFailure())\r\n    }\r\n}\r\n\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    }\r\n    catch (error) {\r\n        put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport function* signOutOfAccount() {\r\n    try {\r\n        yield auth.signOut()\r\n        yield put(SignOutSuccess())\r\n    }\r\n    catch (error) {\r\n        put(SignOutFailure(error))\r\n    }\r\n}\r\n\r\nexport function* signUp({ payload: { DisplayName, Email, Password, ConfirmPassword } }) {\r\n    try {\r\n        const { user } = auth.createUserWithEmailAndPassword(\r\n            Email,\r\n            Password,\r\n        )\r\n\r\n        yield createUserProfileDocument(user, { DisplayName })\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// listensers\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\nexport function* onSignOutStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOutOfAccount)\r\n}\r\n\r\nexport function* onSignUpStart() {\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\n// Final saga\r\n\r\nfunction* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart)\r\n    ])\r\n}\r\n\r\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}