{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Rushlow\\\\documents\\\\rushlow-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.jsx\";\nimport React, { Fragment, useState, useCallback } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.jsx\";\nimport CustomButton from \"../custom-button/custom-button.jsx\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions.js\";\nimport UserActionTypes from \"../../redux/user/user.types.js\";\nimport \"./sign-in.scss\";\n\nconst SignIn = ({\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    Email: '',\n    password: ''\n  });\n  const dispatch = useDispatch();\n  const googleSignIn = useCallback(() => dispatch({\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\n  }));\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      id\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [id]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \" I already have an account\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"email\",\n    name: \"Email\",\n    value: email,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"password\",\n    name: \"Password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, \" Sign In \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignIn,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, \" Sign In With Google \")))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","Fragment","useState","useCallback","connect","useDispatch","FormInput","CustomButton","googleSignInStart","emailSignInStart","UserActionTypes","SignIn","userCredentials","setCredentials","Email","password","dispatch","googleSignIn","type","GOOGLE_SIGN_IN_START","email","handleSubmit","event","preventDefault","handleChange","value","id","target","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useCallback } from \"react\"\r\nimport { connect, useDispatch } from \"react-redux\"\r\n\r\nimport FormInput from \"../form-input/form-input.jsx\"\r\nimport CustomButton from \"../custom-button/custom-button.jsx\"\r\n\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions.js\"\r\n\r\nimport UserActionTypes from \"../../redux/user/user.types.js\"\r\n\r\n\r\nimport \"./sign-in.scss\"\r\n\r\n\r\nconst SignIn = ({ googleSignInStart, emailSignInStart }) => {\r\n    const [userCredentials, setCredentials] = useState({\r\n        Email: '',\r\n        password: ''\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n    const googleSignIn = useCallback(\r\n        () => dispatch({ type: UserActionTypes.GOOGLE_SIGN_IN_START })\r\n    )\r\n\r\n    const { email, password } = userCredentials\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        emailSignInStart(email, password)\r\n    }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { value, id } = event.target\r\n        setCredentials({ ...userCredentials, [id]: value })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"sign-in\">\r\n                <h2> I already have an account</h2>\r\n                <p>Sign in with your email and password</p>\r\n\r\n                <form onSubmit={handleSubmit} >\r\n                    <FormInput\r\n                        id=\"email\"\r\n                        name=\"Email\"\r\n                        value={email}\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                    <FormInput\r\n                        id=\"password\"\r\n                        name=\"Password\"\r\n                        type=\"password\"\r\n                        value={password}\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className=\"button\" >\r\n                        <CustomButton type=\"submit\" > Sign In </CustomButton>\r\n                        <CustomButton type=\"button\" onClick={googleSignIn} isGoogleSignIn> Sign In With Google </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}