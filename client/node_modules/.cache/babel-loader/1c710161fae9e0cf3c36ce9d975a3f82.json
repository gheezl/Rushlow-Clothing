{"ast":null,"code":"import { takeLatest, put, all, call, take } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types.js\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.js\";\nimport { SignInSuccess, SignInFailure, getCurrentUser } from \"../user/user.actions.js\"; // Saga functions\n\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(SignInFailure());\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure());\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    put(SignInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    console.log(error);\n  }\n} // listensers\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n} // Final saga\n\nfunction* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated)]);\n}\n\nexport default userSagas;","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/redux/user/user-saga.js"],"names":["takeLatest","put","all","call","take","UserActionTypes","auth","createUserProfileDocument","googleProvider","SignInSuccess","SignInFailure","getCurrentUser","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","console","log","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;AAEA,OAAOC,eAAP,MAA4B,iBAA5B;AAEA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,cAA1C,QAAgE,4BAAhE;AAEA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,QAA6D,yBAA7D,C,CAEA;;AAEA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C;AAC/C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMX,IAAI,CAACI,yBAAD,EAA4BM,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMf,GAAG,CACLQ,aAAa,CAAC;AAAEQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADR,CAAT;AAGH,GAND,CAOA,OAAOC,KAAP,EAAc;AACVlB,IAAAA,GAAG,CAACS,aAAa,EAAd,CAAH;AACH;AACJ;AAGD,OAAO,UAAUU,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACgB,eAAL,CAAqBd,cAArB,CAAvB;AACA,UAAMI,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOF,KAAP,EAAc;AACZlB,IAAAA,GAAG,CAACS,aAAa,EAAd,CAAH;AACH;AACJ;AAGD,OAAO,UAAUa,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AAC/D,MAAI;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAW,MAAMf,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMd,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAIA,OAAOF,KAAP,EAAc;AACVlB,IAAAA,GAAG,CAACS,aAAa,CAACS,KAAD,CAAd,CAAH;AACH;AACJ;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACnC,MAAI;AACA,UAAMf,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACA,QAAI,CAACE,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACH,GAJD,CAKA,OAAOM,KAAP,EAAc;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACH;AACJ,C,CAED;;AAEA,OAAO,UAAUY,mBAAV,GAAgC;AACnC,QAAM/B,UAAU,CAACK,eAAe,CAAC2B,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACH;AAGD,OAAO,UAAUa,kBAAV,GAA+B;AAClC,QAAMjC,UAAU,CAACK,eAAe,CAAC6B,mBAAjB,EAAsCX,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUY,kBAAV,GAA+B;AAClC,QAAMnC,UAAU,CAACK,eAAe,CAAC+B,kBAAjB,EAAqCR,mBAArC,CAAhB;AACH,C,CAED;;AAEA,UAAUS,SAAV,GAAsB;AAClB,QAAMnC,GAAG,CAAC,CACNC,IAAI,CAAC4B,mBAAD,CADE,EAEN5B,IAAI,CAAC8B,kBAAD,CAFE,EAGN9B,IAAI,CAACyB,mBAAD,CAHE,CAAD,CAAT;AAKH;;AAED,eAAeS,SAAf","sourcesContent":["import { takeLatest, put, all, call, take } from \"redux-saga/effects\"\r\n\r\nimport UserActionTypes from \"./user.types.js\"\r\n\r\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.js\"\r\n\r\nimport { SignInSuccess, SignInFailure, getCurrentUser } from \"../user/user.actions.js\"\r\n\r\n// Saga functions\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth) {\r\n    try {\r\n        const userRef = yield call(createUserProfileDocument, userAuth)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(\r\n            SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n        )\r\n    }\r\n    catch (error) {\r\n        put(SignInFailure())\r\n    }\r\n}\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        yield getSnapshotFromUserAuth(user)\r\n    } catch (error) {\r\n        put(SignInFailure())\r\n    }\r\n}\r\n\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n    try {\r\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user)\r\n    }\r\n    catch (error) {\r\n        put(SignInFailure(error))\r\n    }\r\n}\r\n\r\nexport function* isUserAuthenticated() {\r\n    try {\r\n        const userAuth = yield getCurrentUser();\r\n        if (!userAuth) return;\r\n        yield getSnapshotFromUserAuth(userAuth)\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// listensers\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession() {\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\r\n}\r\n\r\n// Final saga\r\n\r\nfunction* userSagas() {\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated)\r\n    ])\r\n}\r\n\r\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}