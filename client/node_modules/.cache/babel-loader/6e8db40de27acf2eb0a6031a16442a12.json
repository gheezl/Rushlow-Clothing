{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Rushlow\\\\documents\\\\rushlow-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.jsx\";\nimport React, { Component, Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.jsx\";\nimport CustomButton from \"../custom-button/custom-button.jsx\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions.js\";\nimport \"./sign-in.scss\";\n\nconst SignIn = () => {\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      emailSignInStart\n    } = this.props;\n    const {\n      email,\n      password\n    } = this.state;\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      id\n    } = event.target;\n    this.setState({\n      [id]: value\n    });\n  };\n\n  const {\n    googleSignInStart\n  } = this.props;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \" I already have an account\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"email\",\n    name: \"Email\",\n    value: this.state.email,\n    required: true,\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"password\",\n    name: \"Password\",\n    type: \"password\",\n    value: this.state.password,\n    required: true,\n    onChange: this.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, \" Sign In \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, \" Sign In With Google \")))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/components/sign-in/sign-in.jsx"],"names":["React","Component","Fragment","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","handleSubmit","event","preventDefault","props","email","password","state","handleChange","value","id","target","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport FormInput from \"../form-input/form-input.jsx\"\r\nimport CustomButton from \"../custom-button/custom-button.jsx\"\r\n\r\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions.js\"\r\n\r\n\r\nimport \"./sign-in.scss\"\r\n\r\n\r\nconst SignIn = () => {\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault()\r\n        const { emailSignInStart } = this.props\r\n\r\n        const { email, password } = this.state\r\n\r\n        emailSignInStart(email, password)\r\n    }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        const { value, id } = event.target\r\n\r\n        this.setState({ [id]: value })\r\n    }\r\n\r\n\r\n\r\n    const { googleSignInStart } = this.props;\r\n    return (\r\n        <Fragment>\r\n            <div className=\"sign-in\">\r\n                <h2> I already have an account</h2>\r\n                <p>Sign in with your email and password</p>\r\n\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <FormInput\r\n                        id=\"email\"\r\n                        name=\"Email\"\r\n                        value={this.state.email}\r\n                        required\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <FormInput\r\n                        id=\"password\"\r\n                        name=\"Password\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        required\r\n                        onChange={this.handleChange}\r\n                    />\r\n                    <div className=\"button\" >\r\n                        <CustomButton type=\"submit\" > Sign In </CustomButton>\r\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn> Sign In With Google </CustomButton>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Fragment >\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}