{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jacob Rushlow\\\\documents\\\\rushlow-clothing\\\\src\\\\components\\\\sign-up\\\\sign-up.jsx\";\nimport React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from \"../form-input/form-input.jsx\";\nimport CustomButton from \"../custom-button/custom-button.jsx\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.js\";\nimport { SignUpStart } from \"../../redux/user/user.actions.js\";\nimport \"./sign-up.scss\";\n\nconst SignUp = () => {\n  const [userCredentials, setCredentials] = useState({});\n\n  handleSubmit = async event => {\n    event.preventDefault();\n    const {\n      Password,\n      ConfirmPassword\n    } = this.state;\n\n    if (Password !== ConfirmPassword) {\n      alert(\"Your passwords do not match. Please try again.\");\n      return;\n    } else {\n      const {\n        SignUpStart\n      } = this.props;\n      const {\n        displayName,\n        Email,\n        Password\n      } = this.state;\n      SignUpStart(displayName, Email, Password);\n      this.setState({});\n    }\n  };\n\n  handleChange = event => {\n    const {\n      id,\n      value\n    } = event.target;\n    this.setState({\n      [id]: value\n    });\n  };\n\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = this.state;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: this.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    id: \"displayName\",\n    type: \"text\",\n    name: \"Display Name\",\n    value: displayName,\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Email\",\n    type: \"email\",\n    name: \"Email\",\n    value: email,\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"Password\",\n    type: \"password\",\n    name: \"Password\",\n    value: password,\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    id: \"ConfirmPassword\",\n    type: \"password\",\n    name: \"Confirm Password\",\n    value: confirmPassword,\n    onChange: this.handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  SignUpStart: (displayName, Email, Password) => dispatch(SignUpStart({\n    displayName,\n    Email,\n    Password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/components/sign-up/sign-up.jsx"],"names":["React","Fragment","useState","connect","FormInput","CustomButton","auth","createUserProfileDocument","SignUpStart","SignUp","userCredentials","setCredentials","handleSubmit","event","preventDefault","Password","ConfirmPassword","state","alert","props","displayName","Email","setState","handleChange","id","value","target","email","password","confirmPassword","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport FormInput from \"../form-input/form-input.jsx\"\r\nimport CustomButton from \"../custom-button/custom-button.jsx\"\r\n\r\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.js\"\r\n\r\nimport { SignUpStart } from \"../../redux/user/user.actions.js\"\r\n\r\nimport \"./sign-up.scss\"\r\n\r\n\r\n\r\n\r\nconst SignUp = () => {\r\n    const [userCredentials, setCredentials] = useState({})\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const { Password, ConfirmPassword } = this.state\r\n\r\n        if (Password !== ConfirmPassword) {\r\n            alert(\"Your passwords do not match. Please try again.\")\r\n            return\r\n        }\r\n        else {\r\n            const { SignUpStart } = this.props;\r\n\r\n            const { displayName, Email, Password } = this.state\r\n            SignUpStart(displayName, Email, Password)\r\n            this.setState({})\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { id, value } = event.target;\r\n\r\n        this.setState({ [id]: value })\r\n    }\r\n\r\n    const { displayName, email, password, confirmPassword } = this.state\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"sign-up\">\r\n                <h2 className=\"title\" >I do not have an account</h2>\r\n\r\n                <form className=\"sign-up-form\" onSubmit={this.handleSubmit} >\r\n                    <FormInput\r\n                        id=\"displayName\"\r\n                        type=\"text\"\r\n                        name=\"Display Name\"\r\n                        value={displayName}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        id=\"Email\"\r\n                        type=\"email\"\r\n                        name=\"Email\"\r\n                        value={email}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        id=\"Password\"\r\n                        type=\"password\"\r\n                        name=\"Password\"\r\n                        value={password}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n\r\n                    <FormInput\r\n                        id=\"ConfirmPassword\"\r\n                        type=\"password\"\r\n                        name=\"Confirm Password\"\r\n                        value={confirmPassword}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                    />\r\n                    <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                </form>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    SignUpStart: (displayName, Email, Password) => dispatch(SignUpStart(\r\n        {\r\n            displayName, Email, Password\r\n        }\r\n    ))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp)"]},"metadata":{},"sourceType":"module"}