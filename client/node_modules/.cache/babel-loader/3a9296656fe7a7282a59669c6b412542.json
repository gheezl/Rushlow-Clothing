{"ast":null,"code":"import { takeLatest, put, all, call, take } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types.js\";\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.js\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess } from \"../user/user.actions.js\";\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    put(googleSignInFailure());\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nfunction* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n\nexport default userSagas;","map":{"version":3,"sources":["C:/Users/Jacob Rushlow/documents/rushlow-clothing/src/redux/user/user-saga.js"],"names":["takeLatest","put","all","call","take","UserActionTypes","auth","createUserProfileDocument","googleProvider","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","signInWithEmail","payload","email","password","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqCC,IAArC,QAAiD,oBAAjD;AAEA,OAAOC,eAAP,MAA4B,iBAA5B;AAEA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,cAA1C,QAAgE,4BAAhE;AAEA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,QAA6E,yBAA7E;AAIA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMP,IAAI,CAACQ,eAAL,CAAqBN,cAArB,CAAvB;AACA,UAAMO,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CACLQ,mBAAmB,CAAC;AAAES,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADd,CAAT;AAGH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZnB,IAAAA,GAAG,CAACS,mBAAmB,EAApB,CAAH;AACH;AACJ;AAGD,OAAO,UAAUW,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D,CAElE;AAGD,OAAO,UAAUC,mBAAV,GAAgC;AACnC,QAAMzB,UAAU,CAACK,eAAe,CAACqB,oBAAjB,EAAuCd,gBAAvC,CAAhB;AACH;AAGD,OAAO,UAAUe,kBAAV,GAA+B;AAClC,QAAM3B,UAAU,CAACK,eAAe,CAACuB,mBAAjB,EAAsCP,eAAtC,CAAhB;AACH;;AAGD,UAAUQ,SAAV,GAAsB;AAClB,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACsB,mBAAD,CAAL,CAAD,CAAT;AACH;;AAED,eAAeI,SAAf","sourcesContent":["import { takeLatest, put, all, call, take } from \"redux-saga/effects\"\r\n\r\nimport UserActionTypes from \"./user.types.js\"\r\n\r\nimport { auth, createUserProfileDocument, googleProvider } from \"../../firebase/firebase.js\"\r\n\r\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess } from \"../user/user.actions.js\"\r\n\r\n\r\n\r\nexport function* signInWithGoogle() {\r\n    try {\r\n        const { user } = yield auth.signInWithPopup(googleProvider)\r\n        const userRef = yield call(createUserProfileDocument, user)\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(\r\n            googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\r\n        )\r\n    } catch (error) {\r\n        put(googleSignInFailure())\r\n    }\r\n}\r\n\r\n\r\nexport function* signInWithEmail({ payload: { email, password } }) {\r\n\r\n}\r\n\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\r\n}\r\n\r\n\r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\r\n}\r\n\r\n\r\nfunction* userSagas() {\r\n    yield all([call(onGoogleSignInStart)])\r\n}\r\n\r\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}